{"error": null, "issues": [{"address": 428, "code": "msg.sender.send(this.balance)", "debug": "SOLVER OUTPUT:\nstorage_4: 0x0\ncaller: 0x0\ncalldata_OddsAndEvens_0: 0x679dffb400000000000000000000000000000000000000000000000000000000\ncalldatasize_OddsAndEvens: 0x4\ncallvalue: 0x0\n", "description": "In the function `getProfit()` a non-zero amount of Ether is sent to msg.sender.\n\nThere is a check on storage index 4. This storage slot can be written to by calling the function `play(uint256)`.", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "getProfit()", "lineno": 50, "title": "Ether send", "type": "Warning"}, {"address": 428, "code": "msg.sender.send(this.balance)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "getProfit()", "lineno": 50, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 535, "code": "players[tot]", "debug": "The exception is triggered under the following conditions:\n\nstorage_4: 0x200\ncalldata_OddsAndEvens_0: 0x6898f82b00000000000000000000000000000000000000000000000000000000\ncalldatasize_OddsAndEvens: 0x4\ncallvalue: 0xde0b6b3a7640000\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "play(uint256)", "lineno": 28, "title": "Exception state", "type": "Informational"}, {"address": 727, "code": "Player[2] public players", "debug": "The exception is triggered under the following conditions:\n\ncalldata_OddsAndEvens_4: 0x2\ncalldata_OddsAndEvens_0: 0xf71d96cb00000000000000000000000000000000000000000000000000000000\ncalldatasize_OddsAndEvens: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "_function_0xf71d96cb", "lineno": 16, "title": "Exception state", "type": "Informational"}, {"address": 837, "code": "players[0].number+players[1].number", "debug": "storage_3: 0x57f25cd000000000000000000000000000000000000000000000000000000000\nstorage_1: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nstorage_4: 0x100\ncalldata_OddsAndEvens_0: 0x6898f82b00000000000000000000000000000000000000000000000000000000\ncalldatasize_OddsAndEvens: 0x4\ncallvalue: 0xde0b6b3a7640000\n", "description": "A possible integer overflow exists in the function `play(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "play(uint256)", "lineno": 36, "title": "Integer Overflow ", "type": "Warning"}, {"address": 970, "code": "players[0].addr.send(1800 finney)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function play(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "play(uint256)", "lineno": 38, "title": "Transaction order dependence", "type": "Warning"}, {"address": 970, "code": "players[0].addr.send(1800 finney)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "play(uint256)", "lineno": 38, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1093, "code": "players[1].addr.send(1800 finney)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function play(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "play(uint256)", "lineno": 41, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1093, "code": "players[1].addr.send(1800 finney)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/front_running/odds_and_evens.sol", "function": "play(uint256)", "lineno": 41, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}