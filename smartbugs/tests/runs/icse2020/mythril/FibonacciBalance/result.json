{
  "contract": "FibonacciBalance",
  "tool": "mythril",
  "start": 1565777138.1558735,
  "end": 1565777150.4103873,
  "duration": 12.25451374053955,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 212,
        "code": "fibonacciLibrary.delegatecall(msg.data)",
        "debug": "",
        "description": "This contract forwards its call data via DELEGATECALL in its fallback function. This means that any function in the called contract can be executed. Note that the callee contract will have access to the storage of the calling contract.\n DELEGATECALL target: Concat(0, Extract(167, 8, storage_0))",
        "filename": "/dataset/unchecked_low_level_calls/FibonacciBalance.sol",
        "function": "fallback",
        "lineno": 38,
        "title": "Call data forwarded with delegatecall()",
        "type": "Informational"
      },
      {
        "address": 212,
        "code": "fibonacciLibrary.delegatecall(msg.data)",
        "debug": "",
        "description": "Be aware that the called contract gets unrestricted access to this contract's state.",
        "filename": "/dataset/unchecked_low_level_calls/FibonacciBalance.sol",
        "function": "fallback",
        "lineno": 38,
        "title": "DELEGATECALL to a user-supplied address",
        "type": "Informational"
      },
      {
        "address": 520,
        "code": "withdrawalCounter += 1",
        "debug": "storage_3: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FibonacciBalance_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_FibonacciBalance: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `withdraw()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/dataset/unchecked_low_level_calls/FibonacciBalance.sol",
        "function": "withdraw()",
        "lineno": 27,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 740,
        "code": "fibonacciLibrary.delegatecall(fibSig, withdrawalCounter)",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 815\n",
        "filename": "/dataset/unchecked_low_level_calls/FibonacciBalance.sol",
        "function": "withdraw()",
        "lineno": 31,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 815,
        "code": "msg.sender.transfer(calculatedFibNumber * 1 ether)",
        "debug": "SOLVER OUTPUT:\nretval_740: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_FibonacciBalance_0: 0x3ccfd60b00000000000000000000000000000000000000000000000000000000\ncalldatasize_FibonacciBalance: 0x4\ncallvalue: 0x0\n",
        "description": "In the function `withdraw()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.",
        "filename": "/dataset/unchecked_low_level_calls/FibonacciBalance.sol",
        "function": "withdraw()",
        "lineno": 32,
        "title": "Ether send",
        "type": "Warning"
      }
    ],
    "success": true
  }
}