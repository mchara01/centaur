{
  "contract": "arbitrary_location_write_simple",
  "tool": "mythril",
  "start": 1565776921.3057544,
  "end": 1565777004.2622058,
  "duration": 82.95645141601562,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 331,
        "code": "bonusCodes.length--",
        "debug": "storage_0: 0x0\ncalldata_Wallet_0: 0x7adde4ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_Wallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer underflow exists in the function `PopBonusCode()`.\nThe subtraction may result in a value < 0.",
        "filename": "/dataset/access_control/arbitrary_location_write_simple.sol",
        "function": "PopBonusCode()",
        "lineno": 28,
        "title": "Integer Underflow",
        "type": "Warning"
      },
      {
        "address": 471,
        "code": "smartcontractsecur",
        "debug": "storage_0: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\ncalldata_Wallet_0: 0xfd10d65500000000000000000000000000000000000000000000000000000000\ncalldatasize_Wallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `PushBonusCode(uint256)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/dataset/access_control/arbitrary_location_write_simple.sol",
        "function": "PushBonusCode(uint256)",
        "lineno": 2,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 534,
        "code": "contract Wallet {\n     uint[] private bonusCodes;\n     address private owner;\n\n     constructor() public {\n         bonusCodes = new uint[](0);\n         owner = msg.sender;\n     }\n\n     function () public payable {\n     }\n\n     function PushBonusCode(uint c) public {\n         bonusCodes.push(c);\n     }\n\n     function PopBonusCode() public {\n         // <yes> <report> ACCESS_CONTROL\n         require(0 <= bonusCodes.length); // this condition is always true since array lengths are unsigned\n         bonusCodes.length--; // an underflow can be caused here\n     }\n\n     function UpdateBonusCodeAt(uint idx, uint c) public {\n         require(idx < bonusCodes.length);\n         bonusCodes[idx] = c; // write to any index less than bonusCodes.length\n     }\n\n     function Destroy() public {\n         require(msg.sender == owner);\n         selfdestruct(msg.sender);\n     }\n }",
        "debug": "storage_0: 0xf7f80197ffffcd1388fe9e147bffff19dc01100900000388870800090084080c\ncalldata_Wallet_0: 0x7adde4ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_Wallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `PopBonusCode()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/dataset/access_control/arbitrary_location_write_simple.sol",
        "function": "PopBonusCode()",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 536,
        "code": "contract Wallet {\n     uint[] private bonusCodes;\n     address private owner;\n\n     constructor() public {\n         bonusCodes = new uint[](0);\n         owner = msg.sender;\n     }\n\n     function () public payable {\n     }\n\n     function PushBonusCode(uint c) public {\n         bonusCodes.push(c);\n     }\n\n     function PopBonusCode() public {\n         // <yes> <report> ACCESS_CONTROL\n         require(0 <= bonusCodes.length); // this condition is always true since array lengths are unsigned\n         bonusCodes.length--; // an underflow can be caused here\n     }\n\n     function UpdateBonusCodeAt(uint idx, uint c) public {\n         require(idx < bonusCodes.length);\n         bonusCodes[idx] = c; // write to any index less than bonusCodes.length\n     }\n\n     function Destroy() public {\n         require(msg.sender == owner);\n         selfdestruct(msg.sender);\n     }\n }",
        "debug": "storage_0: 0xd800000000000000000000000000000000000000000000000000000000000000\ncalldata_Wallet_0: 0x7adde4ef00000000000000000000000000000000000000000000000000000000\ncalldatasize_Wallet: 0x4\ncallvalue: 0x0\n",
        "description": "A possible integer overflow exists in the function `PopBonusCode()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/dataset/access_control/arbitrary_location_write_simple.sol",
        "function": "PopBonusCode()",
        "lineno": 9,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}