{
  "contract": "etherstore",
  "tool": "mythril",
  "start": 1565777043.252953,
  "end": 1565777051.4480128,
  "duration": 8.195059776306152,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 628,
        "code": "msg.sender.call.value(_weiToWithdraw)()",
        "debug": "",
        "description": "In the function `_function_0x155dd5ee` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n",
        "filename": "/dataset/reentrancy/etherstore.sol",
        "function": "_function_0x155dd5ee",
        "lineno": 27,
        "title": "Dependence on predictable environment variable",
        "type": "Warning"
      },
      {
        "address": 628,
        "code": "msg.sender.call.value(_weiToWithdraw)()",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/dataset/reentrancy/etherstore.sol",
        "function": "_function_0x155dd5ee",
        "lineno": 27,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 719,
        "code": "balances[msg.sender] -= _weiToWithdraw",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/dataset/reentrancy/etherstore.sol",
        "function": "_function_0x155dd5ee",
        "lineno": 28,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 787,
        "code": "lastWithdrawTime[msg.sender] = now",
        "debug": "",
        "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.",
        "filename": "/dataset/reentrancy/etherstore.sol",
        "function": "_function_0x155dd5ee",
        "lineno": 29,
        "title": "State change after external call",
        "type": "Warning"
      },
      {
        "address": 891,
        "code": "balances[msg.sender] += msg.value",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0xa8795cd3fffffffffffffffffffffffffffffffffffffffffffffffffffffffe\ncallvalue: 0x57f25cd000000000000000000000000000000000000000000000000000000000\ncalldata_EtherStore_0: 0xe2c41dbc00000000000000000000000000000000000000000000000000000000\ncalldatasize_EtherStore: 0x4\n",
        "description": "A possible integer overflow exists in the function `depositFunds()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/dataset/reentrancy/etherstore.sol",
        "function": "depositFunds()",
        "lineno": 17,
        "title": "Integer Overflow ",
        "type": "Warning"
      }
    ],
    "success": true
  }
}