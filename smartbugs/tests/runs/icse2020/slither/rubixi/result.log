INFO:Slither:Compilation warnings/errors on /dataset/access_control/rubixi.sol:
/dataset/access_control/rubixi.sol:83:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
/dataset/access_control/rubixi.sol:93:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
/dataset/access_control/rubixi.sol:100:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0 || _pcent > 100) throw;
                                                         ^---^
/dataset/access_control/rubixi.sol:113:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_mult > 300 || _mult < 120) throw;
                                                 ^---^
/dataset/access_control/rubixi.sol:119:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_fee > 10) throw;
                                ^---^
/dataset/access_control/rubixi.sol:74:26: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                         participants[payoutOrder].etherAddress.send(payoutToSend);
                         ^-------------------------------------------------------^
/dataset/access_control/rubixi.sol:85:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(collectedFees);
                 ^-------------------------^
/dataset/access_control/rubixi.sol:95:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(_amt);
                 ^----------------^
/dataset/access_control/rubixi.sol:103:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(feesToCollect);
                 ^-------------------------^
/dataset/access_control/rubixi.sol:23:10: Warning: No visibility specified. Defaulting to "public". 
         function DynamicPyramid() {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:39:10: Warning: No visibility specified. Defaulting to "public". 
         function() {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:82:10: Warning: No visibility specified. Defaulting to "public". 
         function collectAllFees() onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:89:10: Warning: No visibility specified. Defaulting to "public". 
         function collectFeesInEther(uint _amt) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:99:10: Warning: No visibility specified. Defaulting to "public". 
         function collectPercentOfFees(uint _pcent) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:108:10: Warning: No visibility specified. Defaulting to "public". 
         function changeOwner(address _owner) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:112:10: Warning: No visibility specified. Defaulting to "public". 
         function changeMultiplier(uint _mult) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:118:10: Warning: No visibility specified. Defaulting to "public". 
         function changeFeePercentage(uint _fee) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:125:10: Warning: No visibility specified. Defaulting to "public". 
         function currentMultiplier() constant returns(uint multiplier, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:130:10: Warning: No visibility specified. Defaulting to "public". 
         function currentFeePercentage() constant returns(uint fee, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:135:10: Warning: No visibility specified. Defaulting to "public". 
         function currentPyramidBalanceApproximately() constant returns(uint pyramidBalance, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:140:10: Warning: No visibility specified. Defaulting to "public". 
         function nextPayoutWhenPyramidBalanceTotalsApproximately() constant returns(uint balancePayout) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:144:10: Warning: No visibility specified. Defaulting to "public". 
         function feesSeperateFromBalanceApproximately() constant returns(uint fees) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:148:10: Warning: No visibility specified. Defaulting to "public". 
         function totalParticipants() constant returns(uint count) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:152:10: Warning: No visibility specified. Defaulting to "public". 
         function numberOfParticipantsWaitingForPayout() constant returns(uint count) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:156:10: Warning: No visibility specified. Defaulting to "public". 
         function participantDetails(uint orderInPyramid) constant returns(address Address, uint Payout) {
         ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Rubixi.addPayout has external calls inside a loop:
	- participants[payoutOrder].etherAddress.send(payoutToSend) (/dataset/access_control/rubixi.sol#74)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Deprecated standard detected @ /dataset/access_control/rubixi.sol#83:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#93:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#100:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#113:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#119:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Rubixi.DynamicPyramid (/dataset/access_control/rubixi.sol#23-25) should be declared external
Rubixi.fallback (/dataset/access_control/rubixi.sol#39-41) should be declared external
Rubixi.collectFeesInEther (/dataset/access_control/rubixi.sol#89-97) should be declared external
Rubixi.collectPercentOfFees (/dataset/access_control/rubixi.sol#99-105) should be declared external
Rubixi.changeOwner (/dataset/access_control/rubixi.sol#108-110) should be declared external
Rubixi.changeMultiplier (/dataset/access_control/rubixi.sol#112-116) should be declared external
Rubixi.changeFeePercentage (/dataset/access_control/rubixi.sol#118-122) should be declared external
Rubixi.currentMultiplier (/dataset/access_control/rubixi.sol#125-128) should be declared external
Rubixi.currentFeePercentage (/dataset/access_control/rubixi.sol#130-133) should be declared external
Rubixi.currentPyramidBalanceApproximately (/dataset/access_control/rubixi.sol#135-138) should be declared external
Rubixi.nextPayoutWhenPyramidBalanceTotalsApproximately (/dataset/access_control/rubixi.sol#140-142) should be declared external
Rubixi.feesSeperateFromBalanceApproximately (/dataset/access_control/rubixi.sol#144-146) should be declared external
Rubixi.totalParticipants (/dataset/access_control/rubixi.sol#148-150) should be declared external
Rubixi.numberOfParticipantsWaitingForPayout (/dataset/access_control/rubixi.sol#152-154) should be declared external
Rubixi.participantDetails (/dataset/access_control/rubixi.sol#156-161) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /dataset/access_control/rubixi.sol:
	- pragma solidity^0.4.15 (/dataset/access_control/rubixi.sol#8): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Rubixi.DynamicPyramid' (/dataset/access_control/rubixi.sol#23-25) is not in mixedCase
Parameter '_fee' of Rubixi.addPayout (/dataset/access_control/rubixi.sol#59) is not in mixedCase
Parameter '_amt' of Rubixi.collectFeesInEther (/dataset/access_control/rubixi.sol#89) is not in mixedCase
Parameter '_pcent' of Rubixi.collectPercentOfFees (/dataset/access_control/rubixi.sol#99) is not in mixedCase
Parameter '_owner' of Rubixi.changeOwner (/dataset/access_control/rubixi.sol#108) is not in mixedCase
Parameter '_mult' of Rubixi.changeMultiplier (/dataset/access_control/rubixi.sol#112) is not in mixedCase
Parameter '_fee' of Rubixi.changeFeePercentage (/dataset/access_control/rubixi.sol#118) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/dataset/access_control/rubixi.sol analyzed (1 contracts), 29 result(s) found