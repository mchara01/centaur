{
  "contract": "../data/dataset/eth2/0xEd2E71780dA57d57Fe711Ab80446439A25485cF4.hex",
  "tool": "mythril",
  "start": 1659453132.9175913,
  "end": 1659453541.3685308,
  "exit_code": 0,
  "duration": 408.4509394168854,
  "success": true,
  "findings": [
    "Exception_State"
  ],
  "errors": [],
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 2198,
        "contract": "MAIN",
        "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).",
        "function": "ownersArr(uint256)",
        "max_gas_used": 1166,
        "min_gas_used": 1071,
        "severity": "Medium",
        "sourceMap": 2198,
        "swc-id": "110",
        "title": "Exception State",
        "tx_sequence": {
          "initialState": {
            "accounts": {
              "0x0": {
                "balance": "0x0",
                "code": "60806040526004361061009c5760003560e01c806342cde4e81161006457806342cde4e8146101ce5780639e4e7318146101e3578063a0ab9653146101f8578063aa5df9e214610455578063affed0e01461049b578063ba9a91a5146104b05761009c565b806304622c2e146101215780631279991b146101485780631ed23c8c1461015d5780632f54bf6e146101725780633644e515146101b9575b7f87de3cfd3de44d9b830a98f5554f3ff79f1fafd7b3579d113ce92d82d3def2a1333460003660405180856001600160a01b03166001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a1005b34801561012d57600080fd5b506101366104c5565b60408051918252519081900360200190f35b34801561015457600080fd5b506101366104e9565b34801561016957600080fd5b5061013661050d565b34801561017e57600080fd5b506101a56004803603602081101561019557600080fd5b50356001600160a01b0316610531565b604080519115158252519081900360200190f35b3480156101c557600080fd5b50610136610546565b3480156101da57600080fd5b5061013661054c565b3480156101ef57600080fd5b50610136610552565b34801561020457600080fd5b50610453600480360361010081101561021c57600080fd5b810190602081018135600160201b81111561023657600080fd5b82018360208201111561024857600080fd5b803590602001918460208302840111600160201b8311171561026957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102b857600080fd5b8201836020820111156102ca57600080fd5b803590602001918460208302840111600160201b831117156102eb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561033a57600080fd5b82018360208201111561034c57600080fd5b803590602001918460208302840111600160201b8311171561036d57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092956001600160a01b0385351695602086013595919450925060608101915060400135600160201b8111156103d157600080fd5b8201836020820111156103e357600080fd5b803590602001918460018302840111600160201b8311171561040457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335169350505060200135610576565b005b34801561046157600080fd5b5061047f6004803603602081101561047857600080fd5b503561088a565b604080516001600160a01b039092168252519081900360200190f35b3480156104a757600080fd5b506101366108b1565b3480156104bc57600080fd5b506101366108b7565b7f32f3de0d7fc1cdd909bb4d992a94061e800669c611b9d07f137df1f4bb85f09781565b7f3ee892349ae4bbe61dce18f95115b5dc02daf49204cc602458cd4c1f540d56d781565b7fd87cd6ef79d4e2b95e15ce8abf732db51ec771f1ca2edccf22a46c729ac5647281565b60026020526000908152604090205460ff1681565b60045481565b60015481565b7fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681565b60015487511461058557600080fd5b85518751148015610597575087518751145b6105a057600080fd5b6001600160a01b0382163314806105be57506001600160a01b038216155b6105c757600080fd5b825160208085019190912060008054604080517f3ee892349ae4bbe61dce18f95115b5dc02daf49204cc602458cd4c1f540d56d7818701526001600160a01b03808c1682840152606082018b9052608082019590955260a081019290925292861660c082015260e0808201869052835180830390910181526101008201845280519085012060045461190160f01b6101208401526101228301526101428083018290528451808403909101815261016290920190935280519301929092209091805b6001548110156107835760006001848e84815181106106a457fe5b60200260200101518e85815181106106b857fe5b60200260200101518e86815181106106cc57fe5b602002602001015160405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561072b573d6000803e3d6000fd5b505050602060405103519050826001600160a01b0316816001600160a01b031611801561077057506001600160a01b03811660009081526002602052604090205460ff165b61077957600080fd5b9150600101610689565b5060008054600101815586518190819060208a018b8d8af19050806107a757600080fd5b7f187ae0bfb8619f02a4db1cfef70a54e5722d00d8fcfe6811f1a1f044633ca0a7338a8a8a60405180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561083f578181015183820152602001610827565b50505050905090810190601f16801561086c5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050505050505050505050565b6003818154811061089757fe5b6000918252602090912001546001600160a01b0316905081565b60005481565b7f72dc1dc597006ea524d75bd3377c4663827629e52e27fd2169cca6f90f6d1ef98156fea265627a7a72305820096b5da919aa77c424ceaed70d4b3a128809fd0c90a2bbf31a4413a09180572064736f6c634300050a0032",
                "nonce": 0,
                "storage": "{}"
              },
              "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                "balance": "0x0",
                "code": "",
                "nonce": 0,
                "storage": "{}"
              }
            }
          },
          "steps": [
            {
              "address": "0x0",
              "calldata": "0xaa5df9e2f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9",
              "input": "0xaa5df9e2f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9",
              "name": "ownersArr(uint256)",
              "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
              "value": "0x0"
            }
          ]
        }
      }
    ],
    "success": true
  }
}